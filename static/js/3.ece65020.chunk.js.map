{"version":3,"sources":["libs/http.js","components/FriendPreview/index.jsx","components/FriendPreview/FriendPreview.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","pages/Home/Home.module.scss","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","httpDELETE","FriendPreview","props","name","photo","className","styles","friend","src","alt","module","exports","MessagePreview","text","date","Date","sender","message","formatDistance","addSuffix","locale","it","Post","author","post","onClick","id","alert","window","location","href","deleteBtn","friends","messages","posts","Home","useState","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","useEffect","reverse","home","grid","map","index","to","createPostBtn"],"mappings":"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","file":"static/js/3.ece65020.chunk.js","sourcesContent":["const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };\n","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n  const data = props.data || {\n    name: \"Friend\",\n    photo: \"https://randomuser.me/api/portraits/women/59.jpg\",\n  };\n\n  return (\n    <div className={styles.friend}>\n      <img src={data.photo} alt={data.name} />\n      <p>{data.name}</p>\n    </div>\n  );\n};\n\nexport { FriendPreview };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport styles from \"./MessagePreview.module.scss\";\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: \"lorem ipsum\",\n    date: new Date(),\n    sender: \"User\",\n  };\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport { MessagePreview };\n","import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport { httpDELETE } from \"../../libs/http\";\nimport styles from \"./Post.module.scss\";\n\nconst Post = (props) => {\n  const data = props.data || {\n    author: \"User\",\n    text: \"text\",\n    date: new Date(),\n    photo:\n      \"https://images.unsplash.com/photo-1639512398860-be15f48100ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80\",\n  };\n\n  const handleDeletePost = () => {\n    httpDELETE(`/posts/${props.data.id}`).then(() => {});\n    alert(`Post by ${props.data.author} was deleted`);\n    window.location.href = \"/\";\n  };\n\n  return (\n    <article className={styles.post}>\n      <button onClick={handleDeletePost} className={styles.deleteBtn}>\n        X\n      </button>\n\n      <h3>{data.author}</h3>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n\n      {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n\n      {/*\n      Per gestire condizioni più complesse posso richiamare una funzione \n      \n      hasImage(data.photo) \n      */}\n    </article>\n  );\n};\n\nexport { Post };\n","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendsPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendPreview = [];\n  // SETTER -> friendPreview = [...]\n\n  // Esegui del codice quando il componente è inizializzato (montato in pagina)\n  // componentDidMount() --> simile a \"DOMContentLoaded\" ma solo per il componente\n  useEffect(() => {\n    // fetch(\"https://edgemony-backend.herokuapp.com/friends?_limit=4\")\n    //   .then((response) => response.json())\n    //   .then((data) => setFriendsPreview(data));\n\n    http(\"/friends?_limit=4\").then((data) => setFriendsPreview(data));\n    http(\"/messages?_limit=4\").then((data) => setMessagesPreview(data));\n    http(\"/posts\").then((data) => setAllPosts(data.reverse()));\n\n    // Promise.all([\n    //   http(\"/friends?_limit=4\"),\n    //   http(\"/messages?_limit=4\"),\n    //   http(\"/posts\")\n    // ]).then((data) => console.log(data[0]))\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          <Link to=\"/new-post\">\n            <button className={styles.createPostBtn}>\n              + Create a new post!\n            </button>\n          </Link>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}